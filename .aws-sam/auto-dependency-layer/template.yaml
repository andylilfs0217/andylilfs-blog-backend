AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'andylilfs-blog-be

  Sample SAM Template for andylilfs-blog-be

  '
Globals:
  Function:
    Timeout: 3
Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.HelloWorldFunction19d43fc4DepLayer
    Metadata:
      SamResourceId: HelloWorldFunction
  AndylilfsBlogTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  GetAllBlogsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: GetAllBlogsFunction
      CodeUri: GetAllBlogsFunction
      Handler: handler.get_blogs
      Runtime: python3.12
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          ANDYLILFSBLOGTABLE_TABLE_NAME:
            Ref: AndylilfsBlogTable
          ANDYLILFSBLOGTABLE_TABLE_ARN:
            Fn::GetAtt:
            - AndylilfsBlogTable
            - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: AndylilfsBlogTable
      Events:
        ServerlessRestApiGETblogs:
          Type: Api
          Properties:
            Path: /blogs
            Method: GET
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.GetAllBlogsFunctionba375be7DepLayer
    Metadata:
      SamResourceId: GetAllBlogsFunction
  GetAllBlogsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${GetAllBlogsFunction}
  GetBlogByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: GetBlogByIdFunction
      CodeUri: GetBlogByIdFunction
      Handler: handler.get_blog_by_id
      Runtime: python3.12
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          ANDYLILFSBLOGTABLE_TABLE_NAME:
            Ref: AndylilfsBlogTable
          ANDYLILFSBLOGTABLE_TABLE_ARN:
            Fn::GetAtt:
            - AndylilfsBlogTable
            - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: AndylilfsBlogTable
      Events:
        ServerlessRestApiGETblogsid:
          Type: Api
          Properties:
            Path: /blogs/{id}
            Method: GET
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.GetBlogByIdFunctionf57704eeDepLayer
    Metadata:
      SamResourceId: GetBlogByIdFunction
  GetBlogByIdFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${GetBlogByIdFunction}
  CreateBlogFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: CreateBlogFunction
      CodeUri: CreateBlogFunction
      Handler: handler.create_blog
      Runtime: python3.12
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          ANDYLILFSBLOGTABLE_TABLE_NAME:
            Ref: AndylilfsBlogTable
          ANDYLILFSBLOGTABLE_TABLE_ARN:
            Fn::GetAtt:
            - AndylilfsBlogTable
            - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: AndylilfsBlogTable
      Events:
        ServerlessRestApiPOSTblogs:
          Type: Api
          Properties:
            Path: /blogs
            Method: POST
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.CreateBlogFunction6c52dad8DepLayer
    Metadata:
      SamResourceId: CreateBlogFunction
  CreateBlogFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${CreateBlogFunction}
  UpdateBlogByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: UpdateBlogByIdFunction
      CodeUri: UpdateBlogByIdFunction
      Handler: handler.update_blog_by_id
      Runtime: python3.12
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          ANDYLILFSBLOGTABLE_TABLE_NAME:
            Ref: AndylilfsBlogTable
          ANDYLILFSBLOGTABLE_TABLE_ARN:
            Fn::GetAtt:
            - AndylilfsBlogTable
            - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: AndylilfsBlogTable
      Events:
        ServerlessRestApiPUTblogsid:
          Type: Api
          Properties:
            Path: /blogs/{id}
            Method: PUT
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.UpdateBlogByIdFunctione93bee3cDepLayer
    Metadata:
      SamResourceId: UpdateBlogByIdFunction
  UpdateBlogByIdFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${UpdateBlogByIdFunction}
  DeleteBlogByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: DeleteBlogByIdFunction
      CodeUri: DeleteBlogByIdFunction
      Handler: handler.delete_blog_by_id
      Runtime: python3.12
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          ANDYLILFSBLOGTABLE_TABLE_NAME:
            Ref: AndylilfsBlogTable
          ANDYLILFSBLOGTABLE_TABLE_ARN:
            Fn::GetAtt:
            - AndylilfsBlogTable
            - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: AndylilfsBlogTable
      Events:
        ServerlessRestApiDELETEblogsid:
          Type: Api
          Properties:
            Path: /blogs/{id}
            Method: DELETE
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.DeleteBlogByIdFunctionc78960d6DepLayer
    Metadata:
      SamResourceId: DeleteBlogByIdFunction
  DeleteBlogByIdFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${DeleteBlogByIdFunction}
  AwsSamAutoDependencyLayerNestedStack:
    DeletionPolicy: Delete
    Metadata:
      CreatedBy: AWS SAM CLI sync command
    Properties:
      TemplateURL: /Users/andyli/Programs/andylilfs-blog-be/.aws-sam/auto-dependency-layer/adl_nested_template.yaml
    Type: AWS::CloudFormation::Stack
Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunction
      - Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - HelloWorldFunctionRole
      - Arn
